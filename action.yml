name: 'Pressable SSH Setup'
description: 'Configures an SSH connection'
inputs:
  ssh_user:
    description: 'SSH Username'
    required: true
  ssh_key:
    description: 'SSH Private key'
    required: false
  ssh_pass:
    description: 'SSH Private key'
    required: false
  ssh_host:
    description: 'SSH host'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Auth SSH using Key
      if: ${{ inputs.ssh_key }}
      run: |
        SSH_PATH="$HOME/.ssh"
        KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"
        SSH_KEY_PRIVATE_PATH="$SSH_PATH/github_action"
        mkdir -p "$SSH_PATH"
        mkdir -p "$SSH_PATH/ctl"
        ssh-keyscan -t rsa "${{ inputs.ssh_host }}" >> "$KNOWN_HOSTS_PATH"
        echo "${{ inputs.ssh_key }}" > "$SSH_KEY_PRIVATE_PATH"
  
        chmod 700 "$SSH_PATH"
        chmod 644 "$KNOWN_HOSTS_PATH"
        chmod 600 "$SSH_KEY_PRIVATE_PATH"
  
        cat >>~/.ssh/config <<END
        Host pressable
          HostName ${{ inputs.ssh_host }}
          User ${{ inputs.ssh_user }}
          IdentityFile $SSH_KEY_PRIVATE_PATH
          StrictHostKeyChecking no
          ControlMaster auto
          ControlPath $SSH_PATH/ctl/%C
        END
      shell: bash
    - name: Auth SSH using Pass
      if: ${{ inputs.ssh_pass }}
      run: |
        SSH_PATH="$HOME/.ssh"
        KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"
        mkdir -p "$SSH_PATH"
        mkdir -p "$SSH_PATH/ctl"
        ssh-keyscan -t rsa "${{ inputs.ssh_host }}" >> "$KNOWN_HOSTS_PATH"
  
        chmod 700 "$SSH_PATH"
        chmod 644 "$KNOWN_HOSTS_PATH"
  
        cat >>~/.ssh/config <<END
        Host pressable
          HostName ${{ inputs.ssh_host }}
          User ${{ inputs.ssh_user }}
          StrictHostKeyChecking no
          ControlMaster auto
          ControlPath $SSH_PATH/ctl/%C
        END
      shell: bash
